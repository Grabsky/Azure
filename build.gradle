plugins {
    id("java-library")
}

final String VERSION = "1.21.7"
final String RUN_NUMBER = System.getenv("GITHUB_RUN_NUMBER") ?: "DEV"

group = "cloud.grabsky"
version = "$VERSION-$RUN_NUMBER"

subprojects {
    apply(plugin: "java-library")

    group = rootProject.group
    version = rootProject.version

    ext {
        BEDROCK_VERSION = "1.21-65"
        KYORI_NBT_VERSION = "4.19.0"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        // Repository for the Paper API.
        maven { url = "https://repo.papermc.io/repository/maven-public/" }
        // Repository containing the 'bedrock' dependency.
        maven { url = "https://maven.pkg.github.com/grabsky/bedrock"; fillCredentials(it) }
        // Repository containing the 'configuration' dependency.
        maven { url = "https://maven.pkg.github.com/grabsky/configuration"; fillCredentials(it) }
        // Repository containing the 'commands' dependency.
        maven { url = "https://maven.pkg.github.com/grabsky/commands"; fillCredentials(it) }
    }

    dependencies {
        compileOnly("org.jetbrains:annotations:24.0.1")
        // Lombok
        compileOnly("org.projectlombok:lombok:1.18.36")
        annotationProcessor("org.projectlombok:lombok:1.18.36")
        // Paper API
        compileOnly("io.papermc.paper:paper-api:1.21.7-R0.1-SNAPSHOT")
    }

    compileJava {
        options.fork = true
        options.compilerArgs += "--enable-preview"
        // Setting compatibility to Java 21 and above.
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

}

/* FOR GITHUB ACTIONS */

tasks.register("release") {
    doLast { print("$VERSION #$RUN_NUMBER") }

}

tasks.register("tag") {
    doLast { print("$VERSION-$RUN_NUMBER") }
}


/* UTILITY METHODS */

private final def fillCredentials(final MavenArtifactRepository repository) {
    repository.credentials {
        username = findProperty("gpr.actor") ?: System.getenv("GITHUB_ACTOR")
        password = findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
    }
}