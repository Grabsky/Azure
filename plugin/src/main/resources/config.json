// This JSON configuration file is lenient but keep an eye where you leave trailing commas as they tend to cause issues.
{
    "general_settings": {
        // Determinates whether titles should be cleared on join.
        "clear_title_on_join": false,
        // Determinates whether player should respawn on spawnpoint of the primary world.
        "respawn_on_primary_world_spawn": true,
        // Determinates whether new players should spawn on spawnpoint of the primary world.
        "teleport_new_players_to_primary_world_spawn": true,
        // Determines whether to use $.command_filter.blocked_command_error_message as unknown command message.
        "use_blocked_command_error_message_for_unknown_command": false
    },
    "chat_settings": {
        // Chat cooldown in milliseconds. Set to 0 to disable. Bypass: azure.plugin.chat.can_bypass_cooldown
        "cooldown": 1000,
        // Chat formats. Supports MiniMessage tags and some placeholders.
        "chat_format": {
            // Default chat format used as a fallback. Placeholders: [signature_uuid, player, displayname, group, prefix, suffix, message]
            "default": "<player>: <message>",
            // Console chat format. Placeholders: [player, displayname, group, prefix, suffix, message]
            "console": "[<signature_uuid>] [<group>] <player>: <message>",
            // Per-permission formats. First matching element will be applied. Iterated in reverse order, from last to first.
            "extra": [
                { "permission": "group.donator", "format": "<gold>(Donator)<white> <player>: <message>" },
                { "permission": "group.admin", "format": "<red>(Admin)<white> <player>: <message>" }
            ],
            // Tags allowed inside messages. Tags: [click, color, decorations, font, gradient, hover, insertion, item, keybind, newline, rainbow, reset, selector, transition, translatable]
            "tags": {
                // Default tags collection used as a fallback.
                "default": ["item"],
                // Per-permission tags. First matching element will be applied. Iterated in reverse order, from last to first.
                "extra": [
                    { "permission": "azure.plugin.chat.staff_allowed_tags", "tags": ["item", "color", "decorations", "gradient", "rainbow", "reset"] }
                ]
            }
        },
        "moderation": {
            // Message deletion. Messages can be deleted for 5 minutes after being sent.
            "message_deletion": {
                // Determinates whether player messages are allowed to be deleted by moderators.
                "enabled": true,
                // Determinates how long message signature should be stored for. In seconds.
                "cache_expiration_rate": 300,
                // Message delete button styling. Position can either be BEFORE or AFTER.
                "button": { "position": "BEFORE", "text": "<gray>×", "hover": "<gray>Naciśnij, aby usunąć wiadomość." }
            }
        }
    },
    "punishment_settings": {
        // Default reason to be be displayed in case nothing was provided by operator.
        "default_reason": "N/A"
    },
    "command_filter": {
        // Determines whether to enable command filtering.
        "enabled": false,
        // When true, all specified commands are EXCLUDED from completions.
        "use_as_blacklist": false,
        // When true, all EXCLUDED commands will also be blocked.
        "block_filtered_commands": false,
        // Blocked command error message.
        "blocked_command_error_message": "<dark_gray>› <red>Podana komenda nie została odnaleziona.",
        // Default set of command filters.
        "default": ["help", "spawn"],
        // Per-permission command filters. All matching elements will be combined and applied.
        "extra": [
            { "permission": "group.helper", "commands": ["kick", "mute", "unmute"] },
            { "permission": "group.moderator", "commands": ["ban", "unban"] }
        ]
    },
    "resource_pack": {
        // Client must be able to access this address, otherwise resourcepack cannot be downloaded. This is NOT address that internal web server will be hosted at.
        "public_access_address": "",
        // Port to host web-server supplying resourcepack on.
        "port": 25578,
        // Compressed resourcepack file inside "plugins/Azure/.public_resourcepack/".
        "pack_file": "resourcepack.zip",
        // Whether resource pack should be send when player joins the server.
        "send_on_join": false,
        // Marks the resource pack as forced. Player won't be able to join the server without accepting it.
        "is_required": true,
        // Server message shown in resource pack prompt.
        "prompt_message": "<red>Aby grać na naszym serwerze, musisz zaakceptować paczkę zasobów.",
        // Sound played when player is notified
        "notification_sound": { "key": "minecraft:block.note_block.bell", "source": "master", "volume": 1, "pitch": 0.5 }
    },
    // Hidden players are not removed from server list status. Consider setting 'hide-online-players' to 'true'. (server.properties)
    "vanish": {
        // BossBar to be displayed for vanished players. Can be null.
        "bossbar": {
            // Overlays: [PROGRESS, NOTCHED_6, NOTCHED_10, NOTCHED_12, NOTCHED_20]
            "overlay": "PROGRESS",
            // Colors: [BLUE, GREEN, PINK, PURPLE, RED, WHITE, YELLOW]
            "color": "YELLOW",
            // Text displayed above the BossBar.
            "text": "<white>Jesteś <yellow>niewidzialny<white>. Użyj <yellow>/vanish<white>, aby się ujawnić."
        }
    },
    "discord_integrations": {
        // Whether to enable discord integrations or not.
        "enabled": false,
        // Discord bot token. Keep it secure.
        "discord_bot_token": "",
        // Discord bot activity to be displayed.
        "discord_bot_activity": { "refresh_rate": 0, "type": "LISTENING", "state": "server chat..." },
        // Chat forwarding creates a bridge between Minecraft and Discord servers.
        "chat_forwarding": {
            // Whether to enable chat forwarding bridge between Minecraft and Discord.
            "enabled": false,
            // Discord channel ID to use for message forwarding.
            "channel_id": "",
            // Discord webhook URL. Keep it secure.
            "webhook_url": "",
            // Discord webhook username. Supports PlaceholderAPI.
            "webhook_username": "%player_name%",
            // Discord webhook avatar URL. Supports PlaceholderAPI.
            "webhook_avatar": "https://minotar.net/armor/bust/%player_uuid%/100.png",
            // Chat format used to send message to players. Placeholders: [username, displayname, message]
            "chat_format": "(Discord) (<username>): <message>",
            // Chat format used to end message the console. Placeholders: [username, displayname, message]
            "console_format": "(Discord) (<username>): <message>"
        },
        "join_and_quit_forwarding": {
            "enabled": false,
            // Discord channel ID to use for message forwarding.
            "channel_id": "",
            // Discord webhook URL. Keep it secure.
            "webhook_url": "",
            // Discord webhook username. Supports PlaceholderAPI.
            "webhook_username": "",
            // Discord webhook avatar URL. Supports PlaceholderAPI.
            "webhook_avatar": "",
            // Join message format.
            "join_message_format": "Player **%player_name%** has joined the server.",
            // Quit message format.
            "quit_message_format": "Player **%player_name%** has left the server."
        },
        // Simple punishment logging. Embed format is not configurable.
        "punishment_logging": {
            // Whether to enable punishment logging to Discord server.
            "enabled": false,
            // Discord channel ID to use for punishment logging.
            "channel_id": ""
        }
    },
    // Recipes to be unregistered after plugin has successfully reloaded. Keep in mind unregistered recipes are removed from players' recipe discovery list.
    "disabled_recipes": []
}